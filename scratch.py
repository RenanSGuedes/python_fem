from __future__ import division
from sympy import *

f = symbols('f', cls=Function)

a = [
    [0, 0, 0, 0],
    [0, 0, 0, 0],
    [0, 0, 0, 0],
    [0, 0, 0, 0]
]

b = [
    [(1, 1), (1, 2), (2, 1), (2, 2)],
    [(2, 2), (2, 3), (3, 2), (3, 3)],
    [(1, 1), (1, 3), (3, 1), (3, 3)],
    [(3, 3), (3, 4), (4, 3), (4, 4)]
]

k = [
    2,
    5,
    7,
    2
]

"""
a[b[0][0][0] - 1][b[0][0][1] - 1] = a[b[0][0][0] - 1][b[0][0][1] - 1] + k[0]
a[b[0][1][0] - 1][b[0][1][1] - 1] = a[b[0][1][0] - 1][b[0][1][1] - 1] + k[0]
a[b[0][2][0] - 1][b[0][2][1] - 1] = a[b[0][2][0] - 1][b[0][2][1] - 1] + k[0]
a[b[0][3][0] - 1][b[0][3][1] - 1] = a[b[0][3][0] - 1][b[0][3][1] - 1] + k[0]

a[b[1][0][0] - 1][b[1][0][1] - 1] = a[b[1][0][0] - 1][b[1][0][1] - 1] + k[1]
a[b[1][1][0] - 1][b[1][1][1] - 1] = a[b[1][1][0] - 1][b[1][1][1] - 1] + k[1]
a[b[1][2][0] - 1][b[1][2][1] - 1] = a[b[1][2][0] - 1][b[1][2][1] - 1] + k[1]
a[b[1][3][0] - 1][b[1][3][1] - 1] = a[b[1][3][0] - 1][b[1][3][1] - 1] + k[1]

a[b[2][0][0] - 1][b[2][0][1] - 1] = a[b[2][0][0] - 1][b[2][0][1] - 1] + k[2]
a[b[2][1][0] - 1][b[2][1][1] - 1] = a[b[2][1][0] - 1][b[2][1][1] - 1] + k[2]
a[b[2][2][0] - 1][b[2][2][1] - 1] = a[b[2][2][0] - 1][b[2][2][1] - 1] + k[2]
a[b[2][3][0] - 1][b[2][3][1] - 1] = a[b[2][3][0] - 1][b[2][3][1] - 1] + k[2]

a[b[3][0][0] - 1][b[3][0][1] - 1] = a[b[3][0][0] - 1][b[3][0][1] - 1] + k[3]
a[b[3][1][0] - 1][b[3][1][1] - 1] = a[b[3][1][0] - 1][b[3][1][1] - 1] + k[3]
a[b[3][2][0] - 1][b[3][2][1] - 1] = a[b[3][2][0] - 1][b[3][2][1] - 1] + k[3]
a[b[3][3][0] - 1][b[3][3][1] - 1] = a[b[3][3][0] - 1][b[3][3][1] - 1] + k[3]

print(a)
"""

# Soma os ks

print(a)

"""
for i in range(len(a)):
    for j in range(len(a)):
        a[b[i][j][0] - 1][b[i][j][1] - 1] += k[i]
"""

print(a)

M1 = Matrix(a)

print(-M1)





